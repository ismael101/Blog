{"version":3,"sources":["components/Navigation.js","views/Article.js","components/Article.js","views/Home.js","components/Heading.js","views/Search.js","views/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","state","search","handleSearch","bind","handleChange","keyword","this","history","push","e","setState","target","value","error","info","console","log","Navbar","style","backgroundColor","to","Brand","className","Toggle","aria-controls","Collapse","id","Form","inline","onSubmit","FormControl","type","placeholder","onChange","Button","variant","onClick","Component","withRouter","Article","article","axios","get","match","params","data","AOS","init","duration","Container","data-aos","title","Row","Col","author","Date","published","substring","Image","src","image","fluid","content","href","url","Card","border","Img","Title","Body","Text","description","Home","articles","articleslist","map","key","length","Jumbotron","CardColumns","Heading","xs","sm","width","Search","list","listarticles","NotFound","marginTop","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1c30660d.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Navbar, Form, Button, FormControl} from 'react-bootstrap'\nimport {withRouter,Link} from 'react-router-dom'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nclass Navigation extends Component{\n    constructor(props){\n      super(props)\n      this.state = {search:\"\"}\n      this.handleSearch = this.handleSearch.bind(this); \n      this.handleChange = this.handleChange.bind(this)\n    }\n    handleSearch(){\n      const keyword = this.state.search\n      this.props.history.push(`/search=${keyword}`) \n    }\n    handleChange(e){\n      this.setState({search:e.target.value})\n    }\n    componentDidCatch(error, info) {\n      console.log(error, info)\n    }\n    render(){\n        return(\n            <Navbar style={{backgroundColor:'black'}}>\n              <Link to='/'>\n                <Navbar.Brand className='text-white mr-auto'>Crypto Currency News</Navbar.Brand>\n              </Link>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form inline onSubmit={this.handleSearch} className=\"ml-auto\">\n                  <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" value={this.state.search} onChange={this.handleChange}/>\n                  <Button type='submit' variant=\"outline-light\" onClick={this.handleSearch}>Search</Button>\n                </Form>\n              </Navbar.Collapse>\n          </Navbar>\n        )\n    }\n}\n\nexport default withRouter(Navigation)","import React, {Component} from 'react'\nimport {Container, Image, Row, Col} from 'react-bootstrap'\nimport axios from 'axios'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nclass Article extends Component{\n    constructor(props){\n        super(props);\n        this.state = {article:null}\n    }\n    async componentWillMount(){\n        let article = await axios.get(`/api/articles/${this.props.match.params.id}`)\n        this.setState({article:article.data})\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info)\n    }\n    render(){\n        AOS.init({duration : 2000})\n        const article = this.state.article == null ? (\n            <Container>\n                <h1 className='display-1'>Article Not Found</h1>\n            </Container>\n        ):(\n            <Container className='text-white'>\n            <div className='my-5'>\n                <span className='my-2'>\n                    <h1 data-aos={\"fade-in\"}>{this.state.article.title}</h1>\n                    <Row className='my-3'>\n                        <Col>\n                            <h4 data-aos={\"fade-in\"}>{this.state.article.author}</h4>\n                        </Col>\n                        <Col>\n                            <h4 className='float-right' data-aos={\"fade-in\"}>{Date(this.state.article.published).substring(0,15)}</h4>\n                        </Col>\n                    </Row>\n                </span>\n            <hr/>\n            <Image src={`${this.state.article.image}`} fluid='true' data-aos={\"fade-in\"}/>\n            <div className='my-3'>\n                <p className='lead' data-aos={\"fade-in\"}>\n                    {this.state.article.content}\n                </p>\n            </div>\n                <h5><a href={this.state.article.url}>The rest of the article can be found here</a></h5> \n            </div>\n            </Container>\n        )\n        return(\n            <div>\n                {article}\n            </div>\n        )\n    }\n}\n\nexport default Article","import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nconst Article = (props) => {\n    AOS.init({duration : 2000})\n    return(\n        <Card style={{backgroundColor:'black'}} className='text-white' border='dark' data-aos={\"fade-up\"}>\n        <Card.Img variant='top' src={`${props.article.image}`} fluid/>\n        <Card.Title className='my-3 px-2'>\n            {props.article.title}\n        </Card.Title>\n        <Card.Body>\n            <Card.Text>\n                {props.article.description}\n            </Card.Text>\n            <Link className='mt-3' to={`/article/${props.article.id}`}>\n            <Button variant='outline-light'>\n                Read More\n            </Button>\n        </Link>\n        </Card.Body>\n    </Card>\n    )\n}\n\nexport default Article","import React, {Component} from 'react'\nimport Article from '../components/Article'\nimport {Jumbotron, Container, CardColumns} from 'react-bootstrap'\nimport axios from 'axios'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nclass Home extends Component{\n    constructor(props){\n        super(props)\n        this.state = {articles:[]}\n    }\n    async componentWillMount(){\n        let articles = await axios.get('/api/articles/')\n        this.setState({articles:articles.data})\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info)\n    }  \n    render(){\n        const articleslist = this.state.articles.map(article => {\n            return(\n                <Article article={article} key={article.id}/>\n            )\n        })\n        const articles = this.state.articles.length > 0 ? (\n            <div>\n                    {articleslist}\n            </div>\n        ) : (\n            <div>\n            </div>\n        )\n        AOS.init({duration : 2000})      \n        return(\n            <div>\n                <Jumbotron fluid='true' style={{backgroundColor:'black'}}>\n                    <Container>\n                        <h1 className='text-center text-white display-1 mt-5' data-aos={\"fade-right\"}>Crypto News</h1>\n                    </Container>\n                </Jumbotron>\n                <Container>\n                <h1 className='my-5 text-white' data-aos={'fade-right'}>Latest Articles</h1>\n                <hr/>\n                <CardColumns>\n                {articles}\n                </CardColumns>\n                </Container>\n        </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport {Card, Row, Col, Image, Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n\nconst Heading = (props) => {\n    AOS.init({duration : 2000})\n    return(\n        <Card className='my-5' style={{backgroundColor:'black'}} data-aos={'fade-in'}>\n            <Row>\n                <Col xs={12} sm={6}>\n                <Image\n                width={512}\n                fluid='true'\n                className=\"mr-3\"\n                src={`${props.article.image}`}\n                />\n                </Col>\n                <Col xs={12} sm={6} className='py-5 px-5 text-white'>\n                <h5>{props.article.title}</h5>\n                <p>{props.article.description}</p>\n                <Link to={`/article/${props.article.id}`}>\n                    <Button variant='outline-light'>\n                        Read More\n                    </Button>\n                </Link>\n                </Col>\n            </Row>\n        </Card>\n    )\n}\n\nexport default Heading","import React, {Component} from 'react'\nimport Heading from '../components/Heading'\nimport {Container, Jumbotron} from 'react-bootstrap'\nimport axios from 'axios'\n\nclass Search extends Component{\n    constructor(props){\n        super(props)\n        this.state = {articles:[]}\n    }\n    async componentDidMount(){\n        console.log(this.props.match.params.keyword)\n        let articles = await axios.get(`/api/articles/?search=${this.props.match.params.keyword}`)\n        this.setState({articles:articles.data})\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info)\n    }\n    render(){\n        const list = this.state.articles.map(article => {\n            return(\n                <Heading article={article} key={article.id}/>\n            )\n        })\n        const listarticles = this.state.articles.length > 0 ? (\n            <Container>\n                {list}\n            </Container>  \n        ) : (\n            <Container>\n                <h1 className='display-1'>No Articles Found</h1>\n            </Container>\n        )\n\n        return(\n            <Container className='my-5'>\n                <Jumbotron style={{backgroundColor:'black'}}>\n                    <h1 className='my-3 display-2 text-white'>Search Results {this.state.articles.length}</h1>\n                </Jumbotron>\n                {listarticles}\n            </Container>\n        )\n    }\n}\n\nexport default Search","import React, {Component} from 'react'\nimport { Container } from 'react-bootstrap'\n\nclass NotFound extends Component{\n    render(){\n        return(\n            <Container>\n                <div className='text-white' style={{marginTop:'25%'}}>\n                    <h1 className='display-1'>404</h1>\n                    <hr/>\n                    <h2 className='display-2'>Page Not Found</h2>\n                </div>\n            </Container>\n        )\n    }\n}\nexport default NotFound","import React from 'react';\nimport {Route, Switch, BrowserRouter as Router} from 'react-router-dom'\nimport Navigation from './components/Navigation'\nimport Article from './views/Article'\nimport Home from './views/Home'\nimport Search from './views/Search'\nimport NotFound from './views/NotFound'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Router>\n              <Navigation/>\n              <Switch>\n                <Route path='/' exact component={Home}/>\n                <Route path='/article/:id' exact component={Article}/>\n                <Route path='/search=:keyword' component={Search}/>\n                <Route path='*' component={NotFound}/>               \n              </Switch>\n          </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}